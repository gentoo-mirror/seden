--- configure.ac	2012-04-27 19:37:08.235975562 +0200
+++ configure.ac	2012-04-27 19:42:06.112657828 +0200
@@ -1624,7 +1624,7 @@
 
 CS_CHECK_LIBMINGWX
 AS_IF([test $cs_cv_libmingwex = yes],
-    [CS_EMIT_BUILD_PROPERTY([COMPILER.LFLAGS], [-lmingwex], [+])])
+    [CS_APPEND_TRIMMED([cs_ldflags], [-lmingwex])])
 
 
 
@@ -2656,7 +2656,7 @@
     [AC_MSG_CHECKING([whether to use checking allocations])
     AC_ARG_ENABLE([checking-allocations],
 	[AC_HELP_STRING([--enable-checking-allocations],
-	    [make allocations by default `checking' if the extensive memory
+	    [make allocations by default 'checking' if the extensive memory
 	    debugger is enabled (default NO)])],
 	[], [enable_checking_allocations=no])
     AC_MSG_RESULT([$enable_checking_allocations])
@@ -2729,8 +2729,8 @@
     [], [enable_valgrind=$enable_valgrind_default])
 AC_MSG_RESULT([$enable_valgrind])
 AS_IF([test $enable_valgrind = no],
-    [CS_EMIT_BUILD_PROPERTY([COMPILER.CFLAGS], [-DNVALGRIND], [+])
-    CS_EMIT_BUILD_PROPERTY([COMPILER.C++FLAGS], [-DNVALGRIND], [+])])
+    [CS_APPEND_TRIMMED([cs_cflags], [-DNVALGRIND])
+    CS_APPEND_TRIMMED([cs_cxxflags], [-DNVALGRIND])])
 AC_CHECK_HEADERS([valgrind/valgrind.h],
     [CS_HEADER_PROPERTY([CS_HAVE_VALGRIND_VALGRIND_H])])
 AC_CHECK_HEADERS([valgrind/memcheck.h],
@@ -2763,14 +2763,27 @@
 AC_MSG_CHECKING([whether to emulate makefiles])
 AC_ARG_ENABLE([make-emulation],
     [AC_HELP_STRING([--enable-make-emulation],
-	[enable emulation layer allowing project to be built with `make', in
-	addition to `jam' (default YES)])],
+	[enable emulation layer allowing project to be built with 'make', in
+	addition to 'jam' (default YES)])],
     [], [enable_make_emulation=yes])
 AC_MSG_RESULT([$enable_make_emulation])
 
 
 
 #------------------------------------------------------------------------------
+# Put FLAGS together
+#------------------------------------------------------------------------------
+CS_APPEND_TRIMMED([CFLAGS], [$cs_cflags])
+CS_APPEND_TRIMMED([CPPFLAGS], [$cs_cppflags])
+CS_APPEND_TRIMMED([CXXFLAGS], [$cs_cxxflags])
+CS_APPEND_TRIMMED([LDFLAGS], [$cs_ldflags])
+CS_EMIT_BUILD_PROPERTY([COMPILER.CFLAGS], [$CFLAGS], [+])
+CS_EMIT_BUILD_PROPERTY([COMPILER.CPPFLAGS], [$CPPFLAGS], [+])
+CS_EMIT_BUILD_PROPERTY([COMPILER.C++FLAGS], [$CXXFLAGS], [+])
+CS_EMIT_BUILD_PROPERTY([COMPILER.LFLAGS], [$LDFLAGS], [+])
+
+
+#------------------------------------------------------------------------------
 # Boilerplate: csconfig.h
 #------------------------------------------------------------------------------
 CS_HEADER_PREPEND(
@@ -2792,10 +2805,6 @@
 #------------------------------------------------------------------------------
 # Boilerplate: Jamconfig
 #------------------------------------------------------------------------------
-CS_EMIT_BUILD_PROPERTY([COMPILER.CFLAGS],
-    [AS_ESCAPE([$(COMPILER.CFLAGS.MANDATORY)])], [+])
-CS_EMIT_BUILD_PROPERTY([COMPILER.C++FLAGS],
-    [AS_ESCAPE([$(COMPILER.C++FLAGS.MANDATORY)])], [+])
 CS_EMIT_PACKAGEINFO
 CS_OUTPUT_INSTALLDIRS
 
